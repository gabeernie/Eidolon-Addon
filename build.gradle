buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://dist.creeper.host/Sponge/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: "idea"

idea.module {
    for (String excludeDirName in [".gradle", ".idea", "build", "gradle", "media", "run", "out", "logs"]) {
        excludeDirs += file(excludeDirName)
    }
}

version = '1.0'
group = 'com.lich.apocrypha'
archivesBaseName = 'apocrypha'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=" + archivesBaseName + ".mixins.json"

            property 'forge.logging.console.level', 'debug'

            mods {
                apocrypha {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=" + archivesBaseName + ".mixins.json"

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all',
                    '--output', file('src/generated/resources/'),
                    '--existing', file('src/generated/resources/'),
                    '--existing', file('src/main/resources/')

            mods {
                apocrypha {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }

    maven {
        name "JEI maven"
        url = "https://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.4-35.1.28'

    implementation fg.deobf("curse.maven:eidolon-429625:3157832")

    implementation fg.deobf("top.theillusivec4.curios:curios-forge:1.16.2-4.0.0.1")
    implementation fg.deobf('mezz.jei:jei-1.16.4:7.6.0.58')
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "apocrypha",
                "Specification-Vendor"    : "Lich",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "Lich",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "apocrypha.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "apocrypha.refmap.json"
}